---
name: Run tests

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache multiple paths
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-${{ hashFiles('**/*.lock') }}

      - name: Clean cache if it's too big
        run: |
          du -hs target || exit 0
          target_size=$(du -ms target | awk '{print $1}')
          if [ "$target_size" -gt "5120" ]; then
            echo "size is ${target_size}, running cargo clean"
            cargo clean
          fi

      - name: Lint code
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

      - name: Check format
        run: cargo fmt -- --check

      - name: Run tests
        run: cargo test

      - name: Verify example-protocol can be compiled
        run: |
          pushd examples/example-protocol
          cargo run
          popd

      - name: Install Wasm target
        run: rustup target add wasm32-unknown-unknown

      - name: Verify example-plugin builds
        run: |
          pushd examples/example-plugin
          cargo build
          popd

      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Run end-to-end tests in Deno runtime
        run: |
          pushd examples/example-deno-runtime
          deno test --allow-read tests.ts
          popd

#      - name: Verify example-rust-runtime builds
#        run: |
#          pushd examples/example-rust-runtime
#          cargo build
#          popd
